@using ListaDeTareas.Models;

<head>
    <link rel="stylesheet" href="~/Content/style.css" />
</head>

<h2>Inicio</h2>

<div class="container" style="align-items:end;">

    <a class="btn btn-outline-success" href="@Url.Action("agregar","DataGrid")">Agregar Tarea</a>
    <a class="btn btn-outline-secondary" href="@Url.Action("Index","DataGrid")"><img src="~/Images/actualizar.png" width="20" alt="Actualizar tabla" /></a>

</div>



@(Html.DevExtreme().DataGrid<ListadoTareas>()
    .ID("gridContainer")
    .ColumnAutoWidth(true)
    .RowAlternationEnabled(true)
    .ShowBorders(true)
    .Paging(paging => paging.PageSize(10))
    .Pager(pager =>
    {
        pager.Visible(true);
        pager.DisplayMode(GridPagerDisplayMode.Full);
        pager.ShowPageSizeSelector(true);
        pager.AllowedPageSizes(new JS("[5, 10, 20, 'all']"));
        pager.ShowInfo(true);
        pager.ShowNavigationButtons(true);
    })
    .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )
    .SearchPanel(searchPanel => searchPanel
        .Visible(true)
        .Width(240)
        .Placeholder("Buscar...")
    )
    .HeaderFilter(headerFilter => headerFilter.Visible(true))

    .Columns(columns => {
        columns.AddFor(m => m.IdTarea)
            .Width(140)
            .HeaderFilter(filter => filter.GroupInterval(5))
            .Caption("ID");

        columns.AddFor(m => m.Tarea)
            .Caption("Nombre de tarea");

        columns.AddFor(m => m.DescripcionTarea)
            .Caption("Descripción de tarea");

        columns.AddFor(m => m.Estado)
            .Caption("Estado");

        columns.AddFor(m => m.CreacionTarea)
            .Caption("Fecha de creación")
            .Alignment(HorizontalAlignment.Right)
            .Width(180)
            .DataType(GridColumnDataType.DateTime)
            .Format("d/M/yyyy, HH:mm");
        columns.Add()
                .Caption("Opciones")
                .AllowFiltering(false)
                .AllowSorting(false)
                .CellTemplate(
                            @<text>
                                    <div>
                                        <form action="@Url.Action("editar","DataGrid")" method="post">

                                            <input type="hidden" name="IdTarea" value="<%=data.IdTarea%>" />
                                            <input type="hidden" name="Tarea" value="<%=data.Tarea%>" />
                                            <input type="hidden" name="DescripcionTarea" value="<%=data.DescripcionTarea%>" />
                                            <input type="hidden" name="Estado" value="<%=data.Estado%>" />
                                            <input type="hidden" name="CreacionTarea" value="<%=data.CreacionTarea%>" />
                                            <button class="btn btn-outline-primary btn-sm" type="submit" style="border-radius:10%; width:50px;">
                                                <img src="~/Images/check.png" width="20" alt="Editar tarea" />
                                            </button>
                                        </form>
                                    </div>
                                    <div>
                                        <form action="@Url.Action("eliminarTarea","DataGrid")" method="post">
                                            <input type="hidden" name="IdTarea" value="<%=data.IdTarea%>" />
                                            <button class="btn btn-outline-danger btn-sm" type="submit" style="border-radius:10%; width:50px;">
                                                <img src="~/Images/eliminar.png" width="20" alt="Eliminar tarea" />
                                            </button>
                                        </form>
                                    </div>
                            </text>);
    })
    .DataSource(d => d.WebApi().Controller("DataGridFiltering").UpdateAction(true).DeleteAction(true).Key("IdTarea"))
    .Summary(s => s
        .TotalItems(totalItems =>
        {
            totalItems.AddFor(m => m.IdTarea).SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems =>
        {
            groupItems.Add().SummaryType(SummaryType.Count);
        })
    )
)

<script>
    function getOrderDay(rowData) {
        return (new Date(rowData.OrderDate)).getDay();
    }
</script>
